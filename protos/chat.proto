syntax = "proto3";

package chat;

option go_package = "e:/astro_game/protos/chat";

// 用户信息
message User {
  string user_id = 1;        // 用户唯一ID
  string username = 2;       // 用户名
  string virtual_ip = 3;     // 虚拟IP（包含频道名称信息）
  repeated string tags = 4;  // 当前标签
  string current_game = 5;   // 当前游玩游戏名（可以为空）
}

// 节点信息
message Node {
  string node_id = 1;        // 节点ID
  string user_id = 2;        // 关联的用户ID
  string address = 3;        // 节点地址（IP:端口）
  int64 last_heartbeat = 4;  // 最后心跳时间
  bool can_relay = 5;        // 是否可以作为中继节点
}

// 消息类型
enum MessageType {
  TEXT = 0;    // 文本消息
  IMAGE = 1;   // 图片消息
  SYSTEM = 2;  // 系统消息
}

// 消息内容
message Message {
  string message_id = 1;     // 消息唯一ID
  string sender_id = 2;      // 发送者ID
  MessageType type = 3;      // 消息类型
  string content = 4;        // 消息内容
  int64 sent_at = 5;         // 发送时间（Unix时间戳）
  string signature = 6;      // 消息签名（防篡改）
}

// 节点心跳请求
message HeartbeatRequest {
  string node_id = 1;
  User user_info = 2;        // 用户信息（用于实时更新成员列表）
  int64 timestamp = 3;
}

// 节点心跳响应
message HeartbeatResponse {
  bool success = 1;
  int64 server_time = 2;
  repeated User active_users = 3; // 当前活跃用户列表
}

// 频道加入通知
message ChannelJoinNotification {
  User user = 1;             // 加入的用户
  Node node = 2;             // 用户节点
}

// 频道离开通知
message ChannelLeaveNotification {
  string user_id = 1;        // 离开的用户ID
  string node_id = 2;        // 节点ID
}

// 双向流消息容器
message StreamMessage {
  oneof message_type {
    Message chat_message = 1;           // 聊天消息
    User user_status = 2;               // 用户状态更新
    ChannelJoinNotification join = 3;   // 加入通知
    ChannelLeaveNotification leave = 4; // 离开通知
    HeartbeatRequest heartbeat = 5;     // 心跳请求
    HeartbeatResponse heartbeat_ack = 6; // 心跳响应
  }
  int64 timestamp = 7;                  // 消息时间戳
  string node_id = 8;                   // 发送节点ID
}

// P2P 聊天服务
service P2PChatService {
  // 双向流通信通道
  rpc BidirectionalStream(stream StreamMessage) returns (stream StreamMessage);
}